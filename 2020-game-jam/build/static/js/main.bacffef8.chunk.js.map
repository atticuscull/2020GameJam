{"version":3,"sources":["MyCode/GameStage.js","MyCode/PuzzleButton.js","MyCode/Puzzle.js","MyCode/PuzzleOverlay.js","App.js","serviceWorker.js","index.js"],"names":["GameStage","props","canvasRef","useRef","useState","keysDown","mainKey","secondaryKey","keyState","setKeyState","changeState","setChangeState","handleKeyDown","e","repeat","keyCode","toString","handleKeyUp","useEffect","document","addEventListener","ctx","width","height","context","current","getContext","fillStyle","fillRect","direction","translate","beginPath","moveTo","lineTo","fill","QPI","Math","PI","angle","rotate","drawCharacter","retdir","findDirection","change","split","code","parseInt","NKS","ref","PuzzleButton","currentColor","setCurrentColor","static","className","style","background","colorList","staticColor","onClick","newC","length","Puzzle","puzzleArray","i","rows","temp","j","cols","push","staticSquares","S","initialArray","squareValues","setSquareValues","onSolvePuzzle","solution","Object","keys","reduce","a","b","f","cellSpacing","cellPadding","map","c","key","r","value","newSquareValues","concat","renderSquare","PuzzleOverlay","showModal","setShowModal","closeModal","isOpen","onAfterOpen","overlay","backgroundColor","contentLabel","App","window","innerWidth","windowWidth","setWindowWidth","innerHeight","windowHeight","setWindowHeight","handleResize","Boolean","location","hostname","match","Modal","setAppElement","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bacffef8.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\nfunction findDirection(keyState) {\n  let retdir = \"\";\n  if (keyState.mainKey === 87){\n    retdir += \"up\"\n  }\n  if (keyState.mainKey === 83) {\n    retdir += \"down\"\n  }\n  if (keyState.secondaryKey === 87) {\n    retdir += \"up\"\n  }\n  if (keyState.secondaryKey === 83) {\n    retdir += \"down\"\n  }\n  if (keyState.mainKey === 65) {\n    retdir += \"left\"\n  }\n  if (keyState.mainKey === 68) {\n    retdir += \"right\"\n  }\n  if (keyState.secondaryKey === 65) {\n    retdir += \"left\"\n  }\n  if (keyState.secondaryKey === 68) {\n    retdir += \"right\"\n  }\n  if(retdir === \"\"){\n    retdir = \"center\";\n  }\n  return retdir;\n}\n\nfunction GameStage(props) {\n  const canvasRef = useRef(null);\n  const [keyState, setKeyState] = useState({ keysDown: 0, mainKey: \"\", secondaryKey: \"\" });\n  const [changeState, setChangeState ] = useState(\"\");\n\n  const handleKeyDown = e => {\n    if (!e.repeat) {\n      setChangeState(e.keyCode.toString() + \",down\");\n    }\n  }\n\n  const handleKeyUp = e => {\n    setChangeState(e.keyCode.toString() + \",up\");\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n    document.addEventListener(\"keyup\", handleKeyUp);\n  }, []);\n\n  useEffect(() => {\n    const { width, height } = props;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    const drawCharacter = (ctx, direction) => {\n      ctx.fillStyle = '#000000';\n      ctx.translate(width / 2, height / 2);\n      if(direction === \"center\") {\n        ctx.beginPath();\n        ctx.moveTo(0, -10);\n        ctx.lineTo(10, 0);\n        ctx.lineTo(0, 10);\n        ctx.lineTo(-10, 0);\n        ctx.lineTo(0, -10);\n        ctx.fill();\n      } else {\n        const QPI = Math.PI / 4;\n        let angle = 0;\n        switch (direction) {\n          case \"up\":\n            angle = 0;\n            break;\n          case \"updown\":\n            angle = 0;\n            break;\n          case \"upleft\":\n            angle = -QPI;\n            break;\n          case \"left\":\n            angle = -2 * QPI;\n            break;\n          case \"leftright\":\n            angle = -2 * QPI\n            break;\n          case \"downleft\":\n            angle = -3 * QPI;\n            break;\n          case \"down\":\n            angle = 4 * QPI;\n            break;\n          case \"downup\":\n            angle = 4 * QPI;\n            break;\n          case \"downright\":\n            angle = 3 * QPI;\n            break;\n          case \"right\":\n            angle = 2 * QPI;\n            break;\n          case \"rightleft\":\n            angle = 2 * QPI;\n            break;\n          case \"upright\":\n            angle = QPI;\n            break;\n          \n          default:\n            angle = 0\n        }\n\n        ctx.rotate(angle);\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(-5, 10);\n        ctx.lineTo(0, -20);\n        ctx.lineTo(5, 10);\n        ctx.lineTo(0, 0);\n        ctx.fill();\n        ctx.rotate(-angle);\n        \n      }\n      ctx.translate(-width / 2, -height / 2);\n      \n    }\n\n    const draw = ctx => {\n      ctx.fillStyle = '#ff00ff';\n      ctx.fillRect(0, 0, width, height);\n      drawCharacter(ctx, findDirection(keyState));\n    }\n\n    draw(context);\n  }, [keyState, props]);\n\n  useEffect(()=>{\n    if(changeState !== \"\") {\n      let change = changeState.split(\",\");\n      let code = parseInt(change[0]);\n      let NKS = {};\n      if(change[1] === \"up\"){\n        if (code === keyState.mainKey) {\n          NKS.keysDown = keyState.keysDown - 1;\n          NKS.mainKey = keyState.secondaryKey;\n          NKS.secondaryKey = \"\";\n          setKeyState(NKS);\n        } else if (code === keyState.secondaryKey) {\n          NKS.keysDown = keyState.keysDown - 1;\n          NKS.mainKey = keyState.mainKey;\n          NKS.secondaryKey = \"\";\n          setKeyState(NKS);\n        }\n      }\n      if (change[1] === \"down\" && keyState.keysDown < 2) {\n        NKS.secondaryKey = keyState.mainKey;\n        NKS.mainKey = code;\n        NKS.keysDown = keyState.keysDown + 1;\n        setKeyState(NKS);\n      \n      }\n      setChangeState(\"\");\n    }\n\n  }, [changeState, setChangeState, setKeyState, keyState])\n\n  return(\n    <div>\n      <canvas ref={canvasRef} width={props.width} height={props.height}/>\n    </div>\n  )\n}\n\n\nexport default GameStage;","import React, { useState } from \"react\";\n\nfunction PuzzleButton(props) {\n  const [currentColor, setCurrentColor] = useState(0);\n\n  if (props.static) {\n    return (\n      <button\n        className=\"puzzle-button\"\n        style={{\n          background: props.colorList[props.staticColor]\n        }}\n        onClick={()=>{}}\n      />\n    )\n  } else {\n\n    return (\n      <button\n        className=\"puzzle-button\"\n        style={{\n          background: props.colorList[currentColor]\n        }}\n        onClick={\n          () => {\n            let newC = (currentColor + 1) % props.colorList.length\n            setCurrentColor(newC);\n            props.onClick(newC);\n          }\n        }\n      > </button>\n    )\n  }\n  \n}\nexport default PuzzleButton;","import React, { useState, useEffect } from \"react\";\nimport PuzzleButton from \"./PuzzleButton\";\n\nfunction initialArray(props) {\n  let puzzleArray = []\n  for (let i = 0; i < props.rows; i++) {\n    let temp = []\n    for (let j = 0; j < props.cols; j++) {\n      temp.push(0);\n    }\n    puzzleArray.push(temp);\n  }\n\n  for (let i = 0; i < props.staticSquares.length; i++) {\n    let S = props.staticSquares[i]\n    puzzleArray[S[0]][S[1]] = S[2];\n  }\n\n  return puzzleArray\n}\n\n\n\nfunction Puzzle(props) {\n  const [squareValues, setSquareValues] = useState(initialArray(props));\n  const onSolvePuzzle = props.onSolvePuzzle;\n  const solution = props.solution;\n  function renderSquare(r, c) {\n    let value = squareValues[r][c];\n    return (<PuzzleButton\n      static={value < 0}\n      staticColor={-value}\n      colorList={props.colorList}\n      onClick={(newC) => {\n        let newSquareValues = [].concat(squareValues);\n        newSquareValues[r][c] = newC;\n        setSquareValues(newSquareValues);\n\n      }}\n    />);\n  }\n\n  useEffect(()=>{\n    if (Object.keys(squareValues).reduce((a, e) => a && Object.keys(squareValues[e]).reduce((b, f) => b && (squareValues[e][f] === solution[e][f]), true), true)){\n      onSolvePuzzle()\n    }\n  }, [onSolvePuzzle, squareValues, solution])\n\n  return(\n    <table className=\"puzzle\" cellSpacing=\"0\" cellPadding=\"0\">\n      <thead>\n        <tr>\n          {Object.keys(squareValues[0]).map(c=><th key={c}/>)}\n        </tr>\n      </thead>\n      <tbody>\n        {Object.keys(squareValues).map(e => <tr key={e}>{Object.keys(squareValues[e]).map(f => <td className=\"puzzle-td\" key={f}>{renderSquare(e,f)}</td>)}</tr>)}\n      </tbody>\n    </table>\n  )\n}\n\nexport default Puzzle;","import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport Puzzle from \"./Puzzle\";\n\nfunction PuzzleOverlay(props) {\n  const [showModal, setShowModal] = useState(props.showModal);\n\n  function afterOpenModal() {\n    \n  }\n\n  function closeModal() {\n    setShowModal(false);\n  }\n\n  useEffect(()=>{\n    setShowModal(props.showModal);\n  }, [props, setShowModal]);\n\n\n  return(\n    <Modal\n      isOpen={showModal}\n      onAfterOpen={afterOpenModal}\n      style={{overlay: {backgroundColor: \"#ffffff3f\"}}}\n      contentLabel=\"Example Modal\"\n      className=\"puzzle-modal\"\n    >\n      <div className=\"puzzle-container\">\n        <Puzzle\n          staticSquares={props.staticSquares}\n          colorList={props.colorList}\n          rows={props.rows}\n          cols={props.cols}\n          onSolvePuzzle={closeModal}\n          solution={props.solution}\n        />\n        <button className=\"close-puzzle-button\" onClick={closeModal}>\n          Close Modal\n        </button>\n      </div>\n      \n    </Modal>\n  )\n}\n\nexport default PuzzleOverlay;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport GameStage from './MyCode/GameStage';\nimport PuzzleOverlay from './MyCode/PuzzleOverlay';\n\nfunction App() {\n  const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n  const [ windowHeight, setWindowHeight ] = useState(window.innerHeight);\n\n  const handleResize = () => {\n    setWindowWidth(window.innerWidth);\n    setWindowHeight(window.innerHeight);\n  }\n\n  useEffect(()=>{\n    window.addEventListener(\"resize\", handleResize);\n  });\n\n  return (\n    <div className=\"App\">\n      <GameStage width={windowWidth-1} height={windowHeight-3}/>\n      <PuzzleOverlay\n        showModal={true}\n        solution={[[-2, 0, 0, 2], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]}\n        staticSquares={[[0, 0, -2]]}\n        colorList={[\"black\", \"white\", \"red\"]}\n        rows=\"4\"\n        cols=\"4\"\n      ></PuzzleOverlay>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Modal from \"react-modal\"\n\nModal.setAppElement('#root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}